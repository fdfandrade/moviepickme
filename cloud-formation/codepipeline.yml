---
AWSTemplateFormatVersion: '2010-09-09'
Description: Create the resources needed and codepipeline
Parameters:
  GitHubOwner:
    Description: GitHub Repository Owner
    Type: String
    Default: fdfandrade
  GitHubRepository:
    Description: GitHub Repository Name
    Type: String
    Default: moviepickme
  GitHubBranch:
    Description: GitHub Repository Branch
    Type: String
    Default: master
  GitHubOAuthToken:
    Description: The name of the SSM GitHub OAuth token in SSM store
    Type: String
    Default: GitHubToken
  ParamImdbDatasetFiles:
    Description: List of files to delete, separated by ;
    Type: String
    Default: name.basics.tsv.gz

Resources:
  KMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Used by Assumed Roles to Encrypt/Decrypt code
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Id: !Ref AWS::StackName
        Statement:
          -
            Sid: Allows admin of the key
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - "kms:Create*"
              - "kms:Describe*"
              - "kms:Enable*"
              - "kms:List*"
              - "kms:Put*"
              - "kms:Update*"
              - "kms:Revoke*"
              - "kms:Disable*"
              - "kms:Get*"
              - "kms:Delete*"
              - "kms:ScheduleKeyDeletion"
              - "kms:CancelKeyDeletion"
            Resource: "*"
          -
            Sid: Allow use of the key for CryptoGraphy Lambda
            Effect: Allow
            Principal:
              AWS:
                - !Sub arn:aws:iam::${AWS::AccountId}:root
                - !GetAtt BuildProjectRole.Arn
                - !GetAtt PipeLineRole.Arn
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"

  # ###################################
  # # ARTIFACT BUCKET
  # ###################################

  ArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ArtifactBucket
      PolicyDocument:
        Statement:
          - Action:
              - s3:*
            Effect: Allow
            Resource:
             - !Join ['',['arn:aws:s3:::',!Ref ArtifactBucket, '/*']]
             - !Join ['',['arn:aws:s3:::',!Ref ArtifactBucket]]
            Principal:
              AWS:
                - !GetAtt BuildProjectRole.Arn
                - !GetAtt PipeLineRole.Arn

  # #################
  # # PIPELINE ROLE #
  # #################

  CFDeployerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: monsys-deployer-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /

  CFDeployerPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: monsys-deployer-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - iam:*
              - lambda:*
              - apigateway:*
              - events:*
              - states:*
              - logs:*            
              - cloudformation:*
              - s3:*
              - sqs:*
              - sns:*
              - dynamodb:*
              - ec2:*
              - ssm:*
              - cloudwatch:DeleteAlarms
              - cloudwatch:DescribeAlarms
              - cloudwatch:PutMetricData
              - cloudwatch:PutMetricAlarm
            Resource: "*"
          - Effect: Allow
            Action:
              - kms:*
            Resource:
             - !Ref EncryptionCMK
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetBucketPolicy
              - s3:GetObject
              - s3:ListBucket
            Resource:
             - !Join ['',['arn:aws:s3:::',!Ref ArtifactBucket, '/*']]
             - !Join ['',['arn:aws:s3:::',!Ref ArtifactBucket]]
      Roles:
        - !Ref CFDeployerRole

  PipeLineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole

  PipelinePolicy:
    Type: AWS::IAM::Policy
    DependsOn: S3BucketPolicy
    Properties:
      PolicyName: !Sub ${AWS::StackName}-codepipeline-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - codepipeline:*
            Resource: '*'
          - Effect: Allow
            Action:
              - iam:ListRoles
              - iam:PassRole
            Resource: '*'
          - Effect: Allow
            Action:
              - cloudformation:Describe*
              - cloudformation:List*
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
              - cloudformation:DescribeStacks
              - cloudformation:UpdateStack
              - cloudformation:CreateChangeSet
              - cloudformation:DeleteChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:ExecuteChangeSet
              - cloudformation:SetStackPolicy
              - cloudformation:ValidateTemplate
            Resource: '*'
          - Effect: Allow
            Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
            Resource: '*'
          - Effect: Allow
            Action:
              - s3:ListAllMyBuckets
              - s3:GetBucketLocation
            Resource: '*'
          - Effect: Allow
            Action:
              - kms:*
            Resource: !GetAtt KMSKey.Arn
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetBucketPolicy
              - s3:GetObject
              - s3:ListBucket
            Resource:
            - !Join ['',['arn:aws:s3:::',!Ref ArtifactBucket, '/*']]
            - !Join ['',['arn:aws:s3:::',!Ref ArtifactBucket]]
      Roles:
        - !Ref PipeLineRole

  # ######################
  # # BUILD PROJECT ROLE #
  # ######################

  BuildProjectRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /

  BuildProjectPolicy:
    Type: AWS::IAM::Policy
    DependsOn: S3BucketPolicy
    Properties:
      PolicyName: !Sub ${AWS::StackName}-CodeBuildPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - ssm:GetParameter
              - ssm:GetParameters
            Resource: "*"
          - Effect: Allow
            Action:
              - kms:*
            Resource: !GetAtt KMSKey.Arn
          - Effect: Allow
            Action:
              - iam:ListRoles
              - iam:PassRole
            Resource: '*'
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:PutObjectAcl
              - s3:GetBucketPolicy
              - s3:GetObject
              - s3:ListBucket
            Resource:
            - !Join ['',['arn:aws:s3:::',!Ref ArtifactBucket, '/*']]
            - !Join ['',['arn:aws:s3:::',!Ref ArtifactBucket]]
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
          - Effect: Allow
            Action:
              - cloudformation:CreateStackSet
              - cloudformation:CreateStackInstances
              - cloudformation:DeleteStackInstances
              - cloudformation:DescribeStackSet
              - cloudformation:DescribeStackSetOperation
              - cloudformation:ListStackInstances
              - cloudformation:UpdateStackSet
            Resource: "*"
      Roles:
        - !Ref BuildProjectRole

  # #####################
  # # CODEBUILD PROJECT #
  # #####################

  # - IMDB Datasets -
  BuildProjectIMDBDatasetsHandler:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${AWS::StackName}-IMDBDatasetsHandlerBuild"
      Description: Build project IMDB Datasets Handler
      EncryptionKey: !Ref KMSKey
      ServiceRole: !GetAtt BuildProjectRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.6.5
        EnvironmentVariables:
          - Name: ArtifactBucket
            Value: !Ref ArtifactBucket
          - Name: KMSKey
            Value: !Ref KMSKey
      Source:
        Type: CODEPIPELINE
        BuildSpec: imdb-datasets-handler/buildspec.yml

  TestProjectIMDBDatasetsHandler:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${AWS::StackName}-IMDBDatasetsHandlerTest"
      Description: Test project for IMDB Datasets Handler
      EncryptionKey: !Ref KMSKey
      ServiceRole: !GetAtt BuildProjectRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.6.5
      Source:
        Type: CODEPIPELINE
        BuildSpec: imdb-datasets-handler/testsspec.yml

  # ################
  # # Codepipeline #
  # ################

  PipelineMoviePickMe:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt PipeLineRole.Arn
      Name: !Ref AWS::StackName
      Stages:
        # - GET SOURCE CODE  -
        - Name: GetSource
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: "1"
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepository
                OAuthToken: !Ref GitHubOAuthToken
                Branch: !Ref GitHubBranch
                PollForSourceChanges: true
              OutputArtifacts:
                - Name: SourceCode
              RunOrder: 1
        
        # - TEST LAMBDAS -
        - Name: Test
          Actions:
            # IMDB Datasets
            - Name: CodeTestIMDBDatasetsHandler
              ActionTypeId:
                Category: Test
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref TestProjectIMDBDatasetsHandler
              InputArtifacts:
                - Name: SourceCode
              RunOrder: 1

        # - BUILD AND PACKAGE LAMBDAS -
        - Name: Build
          Actions:
            # IMDB Datasets
            - Name: CodeBuildIMDBDatasetsHandler
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref BuildProjectIMDBDatasetsHandler
              InputArtifacts:
                - Name: SourceCode
              OutputArtifacts:
                - Name: IMDBDatasetsHandlerPackage
              RunOrder: 1

        # - CREATE CHANGE SETS  --------
        - Name: CreateChangeSet
          Actions:
            # IMDB Datasets
            - Name: CreateChangeSetIMDBDatasetsHandler
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt CFDeployerRole.Arn
                StackName: IMDBDatasetsHandler
                ChangeSetName: !Sub "${AWS::StackName}-imdb-datasets-handler"
                TemplatePath: IMDBDatasetsHandlerPackage::imdb-datasets-handler.yaml-processed
                Capabilities: CAPABILITY_NAMED_IAM
                ParameterOverrides: !Sub |-
                  { 
                    "ImdbDatasetFiles": "${ParamImdbDatasetFiles}"
                  }
              InputArtifacts:
                - Name: IMDBDatasetsHandlerPackage
              OutputArtifacts:
                - Name: IMDBDatasetsHandlerChangeSet
              RunOrder: 1

        # - EXECUTE CHANGE SETS  -------
        - Name: ExecuteChangeSet
          Actions:
            # IMDB Datasets
            - Name: ExecuteChangeSetIMDBDatasetsHandler
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !GetAtt CFDeployerRole.Arn
                StackName: IMDBDatasetsHandler
                ChangeSetName: !Sub "${AWS::StackName}-imdb-datasets-handler"
              OutputArtifacts:
                - Name: ExecutedIMDBDatasetsHandlerChangeSet
              RunOrder: 1

      # - S3 Artifact Bucket -
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
        EncryptionKey:
          Id: !Ref KMSKey
          Type: KMS
